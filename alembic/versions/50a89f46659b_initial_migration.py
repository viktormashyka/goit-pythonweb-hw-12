"""Initial migration

Revision ID: 50a89f46659b
Revises: 
Create Date: 2025-03-23 11:59:03.930778

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '50a89f46659b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
role_enum = postgresql.ENUM('USER', 'MODERATOR', 'ADMIN', name='role', create_type=False)
role_enum.create(op.get_bind(), checkfirst=True)

    # Create users table using the same ENUM instance
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('hashed_password', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('avatar', sa.String(length=255), nullable=True),
        sa.Column('confirmed', sa.Boolean(), nullable=True),
        sa.Column('role', role_enum, nullable=False),  # ðŸ‘ˆ reused here
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )

    # Create contacts table
    op.create_table(
        'contacts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('first_name', sa.String(), nullable=False),
        sa.Column('last_name', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('phone', sa.String(), nullable=False),
        sa.Column('birthday', sa.Date(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('contacts')
    op.drop_table('users')

    # Drop the userrole enum type
    role_enum = postgresql.ENUM('USER', 'MODERATOR', 'ADMIN', name='role')
    role_enum.drop(op.get_bind())
    # ### end Alembic commands ###
